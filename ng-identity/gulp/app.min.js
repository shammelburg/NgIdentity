var app;!function(t){var r=function(){function t(t,r,e,o,a){t.state("home",{url:"/",controller:"HomeController",templateUrl:"/app/views/home.html"}).state("account",{url:"/myaccount",controller:"AccountController as vm",templateUrl:"/app/views/account/account-user.html"}).state("account-edit",{url:"/myaccount/edit",controller:"AccountEditController as vm",templateUrl:"/app/views/account/account-edit.html"}).state("account-change",{url:"/myaccount/change-password",controller:"AccountChangeController as vm",templateUrl:"/app/views/account/account-change.html"}).state("account-signin",{url:"/signin",controller:"AccountSignInController as vm",templateUrl:"/app/views/account/account-signin.html"}).state("account-create",{url:"/create-account",controller:"AccountCreateController as vm",templateUrl:"/app/views/account/account-create.html"}).state("account-forgot",{url:"/forgot-password",controller:"AccountForgotController as vm",templateUrl:"/app/views/account/account-forgot.html"}).state("account-reset",{url:"/reset-password?:u&:c",controller:"AccountResetController as vm",templateUrl:"/app/views/account/account-reset.html"}).state("account-confirm-email",{url:"/confirm-email?:u&:t",controller:"AccountConfirmEmailController as vm",templateUrl:"/app/views/account/confirm-email.html"}).state("admin",{url:"/administrator",controller:"",templateUrl:"/app/views/administrator/admin.html"}).state("admin-create",{url:"/administrator/create",controller:"AdminCreateController as vm",templateUrl:"/app/views/administrator/admin-create.html"}).state("admin-users",{url:"/administrator/users",controller:"AdminUsersController as vm",templateUrl:"/app/views/administrator/admin-users.html"}).state("admin-user-edit",{url:"/administrator/user/edit/:Id",controller:"AdminUserEditController as vm",templateUrl:"/app/views/administrator/admin-user-edit.html"}).state("admin-roles",{url:"/administrator/roles",controller:"AdminRoleController as vm",templateUrl:"/app/views/administrator/admin-roles.html"}),a.debugEnabled(!0),r.html5Mode(!0),o.interceptors.push("authInterceptorService"),e.otherwise("/signin")}return t.$inject=["$stateProvider","$locationProvider","$urlRouterProvider","$httpProvider","$logProvider"],t}(),e=function(){function t(t){t.SetAuthData()}return t.$inject=["authService"],t}();angular.module("app",["blockUI","ui.router","LocalStorageModule","ui.bootstrap"]),angular.module("app").run(e),angular.module("app").config(r)}(app||(app={}));var Common;!function(t){var r=function(){function t(t){this.localStorageService=t}return t.prototype.WebAPIUrl=function(){return"http://localhost:50560/"},t.prototype.Config=function(){var t={},r=this.localStorageService.get("authorizationData");return r&&(t={headers:{Authorization:"Bearer "+r.token}}),t},t.$inject=["localStorageService"],t}();t.Api=r;var e=function(){function t(t){this.$log=t}return t.prototype.LogError=function(t){console.log(t)},t.$inject=["$log"],t}();t.Error=e}(Common||(Common={}));
var app;!function(o){var n;!function(o){var n=function(){function o(){}return o}();o.Home=n,angular.module("app").controller("HomeController",n)}(n=o.controllers||(o.controllers={}))}(app||(app={}));
var app;!function(t){var o;!function(t){var o=function(){function t(t,o,n){this.$location=t,this.$window=o,this.authService=n,this.authentication=n.authentication}return t.prototype.ForceSSL=function(){"https"!==this.$location.protocol()&&(this.$window.location.href=this.$location.absUrl().replace("http","https"))},t.prototype.LogOut=function(){this.authService.Logout(),this.$window.location.href="/home"},t.$inject=["$location","$window","authService"],t}();t.Index=o,angular.module("app").controller("IndexController",o)}(o=t.controllers||(t.controllers={}))}(app||(app={}));
!function(){angular.module("app").directive("showError",["$timeout",function(e){return{restrict:"A",require:"^form",link:function(r,n,o,t){var a=n[0].querySelector("[name]"),i=angular.element(a),l=i.attr("name");angular.element(n[0].querySelector(".help-block"));i.bind("blur",function(){n.toggleClass("has-error",t[l].$invalid)}),r.$on("show-errors-event",function(){n.toggleClass("has-error",t[l].$invalid)}),r.$on("hide-errors-event",function(){e(function(){n.removeClass("has-error")},0,!1)})}}}])}();
var app;!function(t){var i;!function(t){var i=function(){function t(t,i){this.$http=t,this.localStorageService=i;var o=new Common.Api(i);this.webApiUrl=o.WebAPIUrl(),this.config=o.Config()}return t.prototype.Forgot=function(t){return this.$http.post(this.webApiUrl+"api/Account/ForgotPassword",t)},t.prototype.ConfirmEmail=function(t,i){return this.$http.post(this.webApiUrl+"api/Account/ConfirmEmail?u="+t+"&t="+i,null)},t.prototype.ResetPassword=function(t){return this.$http.post(this.webApiUrl+"api/Account/ResetPassword",t)},t.prototype.SendConfirmationEmail=function(){return this.$http.post(this.webApiUrl+"api/Account/SendConfirmationEmail",null,this.config)},t.prototype.ChangePassword=function(t){return this.$http.post(this.webApiUrl+"api/Account/ChangePassword",t,this.config)},t.prototype.UserInfo=function(){return this.$http.get(this.webApiUrl+"api/Account/GetUserInfo",this.config)},t.prototype.UpdateUserInfo=function(t){return this.$http.post(this.webApiUrl+"api/Account/UpdateUserInfo",t,this.config)},t.$inject=["$http","localStorageService"],t}();angular.module("app").service("accountService",i)}(i=t.services||(t.services={}))}(app||(app={}));
var app;!function(e){var t;!function(e){var t=function(){function e(e,t,r){this.$q=e,this.$location=t,this.localStorageService=r}return e.prototype._Request=function(e){e.headers=e.headers||{};var t=this.localStorageService.get("authorizationData");return t&&(e.headers.Authorization="Bearer "+t.token),e},e.prototype._ResponseError=function(e){return 401===e.status&&this.$location.path("/login"),this.$q.reject(e)},e.$inject=["$q","$location","localStorageService"],e}();angular.module("app").service("authInterceptorService",t)}(t=e.services||(e.services={}))}(app||(app={}));
var app;!function(t){var e;!function(t){var e=function(){function t(t,e,i,a){this.$http=t,this.$q=e,this.localStorageService=i,this.$state=a,this.authentication={isAuth:!1,isAdmin:!1,role:"",userName:""},this.webApiUrl=Common.Api.prototype.WebAPIUrl()}return t.prototype.Registration=function(t){return this.$http.post(this.webApiUrl+"api/account/register",t)},t.prototype.Login=function(t){var e=this,i="grant_type=password&username="+t.userName+"&password="+t.password,a=this.$q.defer();return this.$http.post(this.webApiUrl+"token",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(i){e.localStorageService.set("authorizationData",{token:i.access_token,userName:t.userName,role:i.roles}),e.authentication.isAuth=!0,e.authentication.isAdmin="Admin"==i.roles?!0:!1,e.authentication.role=i.roles,e.authentication.userName=t.userName,a.resolve(i)}).error(function(t,e){a.reject(t)}),a.promise},t.prototype.Logout=function(){this.localStorageService.remove("authorizationData"),this.authentication.isAuth=!1,this.authentication.isAdmin=!1,this.authentication.role="",this.authentication.userName=""},t.prototype.SetAuthData=function(){var t=this.localStorageService.get("authorizationData");t&&(this.authentication.isAuth=!0,this.authentication.isAdmin="Admin"==t.role?!0:!1,this.authentication.role=t.role,this.authentication.userName=t.userName)},t.prototype.Check=function(t){if(this.authentication.isAuth||this.$state.go("account-signin"),t.length>0){for(var e=!1,i=0;i<t.length;i++)this.authentication.role==t[i]&&(e=!0);e||this.$state.go("account-signin")}},t.$inject=["$http","$q","localStorageService","$state"],t}();angular.module("app").service("authService",e)}(e=t.services||(t.services={}))}(app||(app={}));
var app;!function(t){var e;!function(t){var e=function(){function t(t,e){this.$http=t,this.localStorageService=e;var i=new Common.Api(e);this.webApiUrl=i.WebAPIUrl(),this.config=i.Config()}return t.prototype.Get=function(){return this.$http.get(this.webApiUrl+"api/Role/Get",this.config)},t.prototype.Add=function(t){return this.$http.post(this.webApiUrl+"api/Role/Post?Name="+t,this.config)},t.prototype.Delete=function(t){return this.$http.post(this.webApiUrl+"api/Role/Delete?Name="+t,this.config)},t.$inject=["$http","localStorageService"],t}();angular.module("app").service("roleService",e)}(e=t.services||(t.services={}))}(app||(app={}));
var app;!function(t){var e;!function(t){var e=function(){function t(t,e){this.$http=t,this.localStorageService=e;var i=new Common.Api(e);this.webApiUrl=i.WebAPIUrl(),this.config=i.Config()}return t.prototype.Get=function(){return this.$http.get(this.webApiUrl+"api/User/Get",this.config)},t.prototype.GetUser=function(t){return this.$http.get(this.webApiUrl+"api/User/GetUser?Id="+t,this.config)},t.prototype.UpdateUser=function(t){return this.$http.post(this.webApiUrl+"api/User/UpdateUser",t,this.config)},t.prototype.ResetPassword=function(t){return this.$http.post(this.webApiUrl+"api/User/ResetPassword",t,this.config)},t.prototype.UserRoles=function(t){return this.$http.get(this.webApiUrl+"api/User/GetUserRoles?Id="+t,this.config)},t.prototype.AddUserRoles=function(t){return this.$http.post(this.webApiUrl+"api/User/AddToRole",t,this.config)},t.prototype.RemoveUserRoles=function(t){return this.$http.post(this.webApiUrl+"api/User/RemoveFromRole",t,this.config)},t.$inject=["$http","localStorageService"],t}();angular.module("app").service("userService",e)}(e=t.services||(t.services={}))}(app||(app={}));
var app;!function(e){var t;!function(e){var t=function(){function e(e,t,a,s,o){this.$scope=e,this.$location=t,this.$timeout=a,this.$log=s,this.authService=o,this.isSuccess=!1,this.message=""}return e.prototype.CreateAccount=function(e){var t=this;this.$scope.$broadcast("show-errors-event"),this.$scope.createForm.$invalid||this.authService.Registration(e).then(function(e){t.model={},t.isSuccess=!0,t.message="User has been registered successfully, a confirmation email has been sent.",t.$timeout(function(){t.isSuccess=!1,t.message=""},3e3)})["catch"](function(e){if(t.$log.debug(e.data),e.data.ModelState){var a=[];for(var s in e.data.ModelState)for(var o=0;o<e.data.ModelState[s].length;o++)a.push(e.data.ModelState[s][o]);t.message="Failed to register user due to:"+a.join(" ")}else t.message=e.data})},e.$inject=["$scope","$location","$timeout","$log","authService"],e}();angular.module("app").controller("AdminCreateController",t)}(t=e.controllers||(e.controllers={}))}(app||(app={}));
var app;!function(e){var t;!function(e){var t=function(){function e(e,t,o,r){this.$scope=e,this.$log=t,this.roleService=o,this.authService=r,this.authService.Check(["Admin"]),this.GetRoles()}return e.prototype.RemoveRole=function(e){var t=this;this.roleService.Delete(e.Name).then(function(){t.GetRoles()})},e.prototype.AddRole=function(e){var t=this;this.$scope.$broadcast("show-errors-event"),this.$scope.userForm.$invalid||(this.roleService.Add(e.name).then(function(){t.GetRoles()}),this.role={})},e.prototype.GetRoles=function(){var e=this;this.roleService.Get().then(function(t){e.roles=t.data})},e.$inject=["$scope","$log","roleService","authService"],e}();angular.module("app").controller("AdminRoleController",t)}(t=e.controllers||(e.controllers={}))}(app||(app={}));
var app;!function(e){var s;!function(e){var s=function(){function e(e,s,t,r,a,o,i){var c=this;this.$scope=e,this.$stateParams=s,this.authService=t,this.userService=r,this.roleService=a,this.$log=o,this.$timeout=i,this.authService.Check(["Admin"]),this.userMessage="",this.isUserSuccess=!1,this.roleMessage="",this.isRoleSuccess=!1,this.resetMessage="",this.isResetSuccess=!1;var n=s.Id;n&&(this.GetUserData(n),this.GetRoleData(n),this.roleService.Get().then(function(e){c.roles=e.data})["catch"](this.OnRoleError))}return e.prototype.GetUserData=function(e){var s=this;this.userService.GetUser(e).then(function(e){s.user=e.data})["catch"](function(e){s.userMessage=e})},e.prototype.GetRoleData=function(e){var s=this;this.userService.UserRoles(e).then(function(e){s.uroles=e.data})["catch"](this.OnRoleError)},e.prototype.UpdateUser=function(e){var s=this;this.userService.UpdateUser(e).then(function(){s.userMessage="Successfully updated.",s.isUserSuccess=!0,s.GetUserData(s.$stateParams.Id),s.$timeout(function(){this.userMessage=""},3e3)})["catch"](function(e){s.userMessage=e})},e.prototype.AddRole=function(e){var s=this;return e?void this.userService.AddUserRoles({Id:this.$stateParams.Id,RoleName:e}).then(function(){s.role={},s.roleMessage="Successfully added.",s.isRoleSuccess=!0,s.GetRoleData(s.$stateParams.Id),s.GetUserData(s.$stateParams.Id),s.RoleTimer()})["catch"](this.OnRoleError):(this.roleMessage="Please a role.",void this.RoleTimer())},e.prototype.RemoveRole=function(e){var s=this;this.userService.RemoveUserRoles({Id:this.$stateParams.Id,RoleName:e}).then(function(){s.roleMessage="Successfully removed.",s.isRoleSuccess=!0,s.GetRoleData(s.$stateParams.Id),s.GetUserData(s.$stateParams.Id),s.RoleTimer()})["catch"](this.OnRoleError)},e.prototype.ResetPassword=function(e){var s=this;if(this.$scope.$broadcast("show-errors-event"),!this.$scope.resetForm.$invalid){var t=angular.extend({Id:this.$stateParams.Id},e);this.userService.ResetPassword(t).then(function(){s.reset={},s.resetMessage="Successfully reset password.",s.isResetSuccess=!0,s.$timeout(function(){this.resetMessage=""},3e3)})["catch"](function(e){s.resetMessage=e})}},e.prototype.OnRoleError=function(e){this.roleMessage=e},e.prototype.RoleTimer=function(){var e=this;this.$timeout(function(){e.roleMessage=""},3e3)},e.$inject=["$scope","$stateParams","authService","userService","roleService","$log","$timeout"],e}();angular.module("app").controller("AdminUserEditController",s)}(s=e.controllers||(e.controllers={}))}(app||(app={}));
var app;!function(e){var t;!function(e){var t=function(){function e(e,t){var r=this;this.userService=e,this.authService=t,this.authService.Check(["Admin"]),this.viewBy=15,this.currentPage=1,this.itemsPerPage=this.viewBy,this.maxSize=5,this.userService.Get().then(function(e){r.users=e.data,r.totalItems=e.data.length})}return e.$inject=["userService","authService"],e}();angular.module("app").controller("AdminUsersController",t)}(t=e.controllers||(e.controllers={}))}(app||(app={}));
var app;!function(o){var t;!function(o){var t=function(){function o(o,t,e,n){this.$scope=o,this.$log=t,this.$state=e,this.accountService=n,this.something=function(){}}return o.prototype.ChangePassword=function(o){var t=this;this.$scope.$broadcast("show-errors-event"),this.$scope.changeForm.$invalid||(console.log(o),this.accountService.ChangePassword(o).then(function(o){t.model={},t.message=o.data,t.isSuccess=!0})["catch"](function(o){t.message=o.data.Message}))},o.prototype.Somthing=function(){},o.$inject=["$scope","$log","$state","accountService"],o}();angular.module("app").controller("AccountChangeController",t)}(t=o.controllers||(o.controllers={}))}(app||(app={}));
var app;!function(t){var a;!function(t){var a=function(){function t(t,a,e,o){var n=this;this.accountService=t,this.$stateParams=a,this.$timeout=e,this.$state=o;var r=this.$stateParams.u,i=this.$stateParams.t;r&&i&&t.ConfirmEmail(r,i).then(function(){n.confirmed=!0,n.message="Your email address has been confirmed. You are being redirected to your account in 3 seconds.",e(function(){o.go("account")},3e3)})["catch"](function(t){var a=[];if(t.data.ModelState)for(var e in t.data.ModelState)for(var o=0;o<t.data.ModelState[e].length;o++)a.push(t.data.ModelState[e][o]);else a.push(t.data.ExceptionMessage);n.confirmed=!1,n.message=a.join(" ")})}return t.$inject=["accountService","$stateParams","$timeout","$state"],t}();angular.module("app").controller("AccountConfirmEmailController",a)}(a=t.controllers||(t.controllers={}))}(app||(app={}));
var app;!function(t){var o;!function(t){var o=function(){function t(t,o,n){var r=this;this.accountService=t,this.authService=o,this.$timeout=n,this.authService.Check(["Admin"]),this.message="Confirm Email",this.accountService.UserInfo().then(function(t){r.user=t.data})["catch"](Common.Error.prototype.LogError)}return t.prototype.SendConfirmation=function(){var t=this;this.accountService.SendConfirmationEmail().then(function(){t.message="Confirmation sent",t.$timeout(function(){this.message="Confirm Email"},5e3)})["catch"](Common.Error.prototype.LogError)},t.$inject=["accountService","authService","$timeout"],t}();angular.module("app").controller("AccountController",o)}(o=t.controllers||(t.controllers={}))}(app||(app={}));
var app;!function(e){var t;!function(e){var t=function(){function e(e,t,o,a,s){this.$scope=e,this.$location=t,this.$timeout=o,this.$log=a,this.authService=s,this.isSuccess=!1,this.message=""}return e.prototype.CreateAccount=function(e){var t=this;this.$scope.$broadcast("show-errors-event"),this.$scope.createForm.$invalid||this.authService.Registration(e).then(function(e){t.model={},t.isSuccess=!0,t.message="User has been registered successfully, you will be redirected to sign in page in 3 seconds.",t.$timeout(function(){t.$location.path("/signin")},3e3)})["catch"](function(e){if(t.$log.debug(e.data),e.data.ModelState){var o=[];for(var a in e.data.ModelState)for(var s=0;s<e.data.ModelState[a].length;s++)o.push(e.data.ModelState[a][s]);t.message="Failed to register user due to:"+o.join(" ")}else t.message=e.data})},e.$inject=["$scope","$location","$timeout","$log","authService"],e}();angular.module("app").controller("AccountCreateController",t)}(t=e.controllers||(e.controllers={}))}(app||(app={}));
var app;!function(t){var e;!function(t){var e=function(){function t(t,e,n){this.accountService=t,this.$state=e,this.$log=n,this.isSuccess=!1,this.message="",this.GetUser()}return t.prototype.UpdateAccount=function(t){var e=this;this.accountService.UpdateUserInfo(t).then(function(t){e.isSuccess=!0,e.message=t.data,e.GetUser()})},t.prototype.GetUser=function(){var t=this;this.accountService.UserInfo().then(function(e){t.model=e.data})},t.$inject=["accountService","$state","$log"],t}();angular.module("app").controller("AccountEditController",e)}(e=t.controllers||(t.controllers={}))}(app||(app={}));
var app;!function(t){var o;!function(t){var o=function(){function t(t,o,e,n){this.$scope=t,this.accountService=o,this.$timeout=e,this.$location=n,this.message="",this.isSuccess=!1}return t.prototype.SendLink=function(t){var o=this;this.$scope.$broadcast("show-errors-event"),this.$scope.forgotForm.$invalid||this.accountService.Forgot(t).then(function(t){o.model={},o.isSuccess=!0,o.message=t.data+" You will be redirected to the sign in page in 3 seconds.",o.$timeout(function(){o.$location.path("/signin")},3e3)})["catch"](function(t){o.message=t.data.Message+" Please check your email address and try again."})},t.$inject=["$scope","accountService","$timeout","$location"],t}();angular.module("app").controller("AccountForgotController",o)}(o=t.controllers||(t.controllers={}))}(app||(app={}));
var app;!function(t){var s;!function(t){var s=function(){function t(t,s,e,a,o,i){this.$scope=t,this.$log=s,this.$state=e,this.accountService=a,this.$stateParams=o,this.$timeout=i,this.$stateParams.u&&this.$stateParams.c||(this.message="An error occurred. Please send yourself another email with the link and try again."),this.isSuccess=!1}return t.prototype.Reset=function(t){var s=this;if(this.$scope.$broadcast("show-errors-event"),!this.$scope.resetForm.$invalid){var e={Code:this.$stateParams.c,Id:this.$stateParams.u,Password:t.password};this.accountService.ResetPassword(e).then(function(t){s.user={},s.isSuccess=!0,s.message=t.data+" You will be redirected in 3 seconds.",s.$timeout(function(){this.$state.go("account-signin")},3e3)})["catch"](function(t){s.message=t.data.Message})}},t.$inject=["$scope","$log","$state","accountService","$stateParams","$timeout"],t}();angular.module("app").controller("AccountResetController",s)}(s=t.controllers||(t.controllers={}))}(app||(app={}));
var app;!function(t){var o;!function(t){var o=function(){function t(t,o,n,e){this.$scope=t,this.$state=o,this.$log=n,this.authService=e,this.message="",this.loginData={userName:"",password:""},e.Logout()}return t.prototype.SignIn=function(){var t=this;this.$scope.$broadcast("show-errors-event"),this.$scope.loginForm.$invalid||this.authService.Login(this.loginData).then(function(){t.$state.go("account")})["catch"](function(o){t.message=o.error_description})},t.$inject=["$scope","$state","$log","authService"],t}();angular.module("app").controller("AccountSignInController",o)}(o=t.controllers||(t.controllers={}))}(app||(app={}));